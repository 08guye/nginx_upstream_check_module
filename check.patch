diff --git a/src/http/ngx_http_upstream.c b/src/http/ngx_http_upstream.c
index 4e3c3ed..08a3505 100644
--- a/src/http/ngx_http_upstream.c
+++ b/src/http/ngx_http_upstream.c
@@ -3863,7 +3863,7 @@ ngx_http_upstream(ngx_conf_t *cf, ngx_command_t *cmd, void *dummy)
     if (ctx == NULL) {
         return NGX_CONF_ERROR;
     }
-
+    
     http_ctx = cf->ctx;
     ctx->main_conf = http_ctx->main_conf;
 
diff --git a/src/http/ngx_http_upstream_round_robin.c b/src/http/ngx_http_upstream_round_robin.c
index 52bd808..5aa6ec3 100644
--- a/src/http/ngx_http_upstream_round_robin.c
+++ b/src/http/ngx_http_upstream_round_robin.c
@@ -65,6 +65,15 @@ ngx_http_upstream_init_round_robin(ngx_conf_t *cf,
                 peers->peer[n].down = server[i].down;
                 peers->peer[n].weight = server[i].down ? 0 : server[i].weight;
                 peers->peer[n].current_weight = peers->peer[n].weight;
+
+                if (!server[i].down) {
+                    peers->peer[n].check_index = 
+                        ngx_http_check_add_peer(cf, &server[i].addrs[j]);
+                }
+                else {
+                    peers->peer[n].check_index = (ngx_uint_t) NGX_ERROR;
+                }
+
                 n++;
             }
         }
@@ -118,6 +127,15 @@ ngx_http_upstream_init_round_robin(ngx_conf_t *cf,
                 backup->peer[n].max_fails = server[i].max_fails;
                 backup->peer[n].fail_timeout = server[i].fail_timeout;
                 backup->peer[n].down = server[i].down;
+
+                if (!server[i].down) {
+                    peers->peer[n].check_index = 
+                        ngx_http_check_add_peer(cf, &server[i].addrs[j]);
+                }
+                else {
+                    peers->peer[n].check_index = (ngx_uint_t) NGX_ERROR;
+                }
+
                 n++;
             }
         }
@@ -425,15 +443,17 @@ ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)
 
                     if (!peer->down) {
 
-                        if (peer->max_fails == 0
-                            || peer->fails < peer->max_fails)
-                        {
-                            break;
-                        }
-
-                        if (now - peer->accessed > peer->fail_timeout) {
-                            peer->fails = 0;
-                            break;
+                        if (!ngx_http_check_peer_down(peer->check_index)) {
+                            if (peer->max_fails == 0
+                                    || peer->fails < peer->max_fails)
+                            {
+                                break;
+                            }
+
+                            if (now - peer->accessed > peer->fail_timeout) {
+                                peer->fails = 0;
+                                break;
+                            }
                         }
 
                         peer->current_weight = 0;
@@ -473,15 +493,18 @@ ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)
 
                     if (!peer->down) {
 
-                        if (peer->max_fails == 0
-                            || peer->fails < peer->max_fails)
-                        {
-                            break;
-                        }
+                        if (!ngx_http_check_peer_down(peer->check_index)) {
+
+                            if (peer->max_fails == 0
+                                    || peer->fails < peer->max_fails)
+                            {
+                                break;
+                            }
 
-                        if (now - peer->accessed > peer->fail_timeout) {
-                            peer->fails = 0;
-                            break;
+                            if (now - peer->accessed > peer->fail_timeout) {
+                                peer->fails = 0;
+                                break;
+                            }
                         }
 
                         peer->current_weight = 0;
diff --git a/src/http/ngx_http_upstream_round_robin.h b/src/http/ngx_http_upstream_round_robin.h
index 2213154..557da23 100644
--- a/src/http/ngx_http_upstream_round_robin.h
+++ b/src/http/ngx_http_upstream_round_robin.h
@@ -12,6 +12,7 @@
 #include <ngx_core.h>
 #include <ngx_http.h>
 
+#include "ngx_http_upstream_check_handler.h"
 
 typedef struct {
     struct sockaddr                *sockaddr;
@@ -27,6 +28,8 @@ typedef struct {
     ngx_uint_t                      max_fails;
     time_t                          fail_timeout;
 
+    ngx_uint_t                      check_index;
+
     ngx_uint_t                      down;          /* unsigned  down:1; */
 
 #if (NGX_HTTP_SSL)
